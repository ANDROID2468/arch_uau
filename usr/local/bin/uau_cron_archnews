#!/bin/bash
###############################################################
#
#
# cron job to inform you about new Arch updates and their news
#
#
###############################################################

# unattended upgrade config
UACONF=/etc/unattended-arch-upgrade.conf

# binary for fetching Arch news feed
ANEWSBIN="/usr/bin/python3 /home/archupdater/archnews/archnews"
ANEWSARGS="-rc"

# binary for fetching AUR comments
AURFETCH=/usr/bin/aur-comment-fetch

##############################################################
export TERM=non-interactive

BIN=${0##*/}

# source the necessary conf
[ ! -f $UACONF ]&& echo "ERROR MISSING $UACONF!!!" && exit 3
. $UACONF

LOG="$NEWSLOG"

# set amount of comments for AUR packages
if [ "$BRIEFNEWSAUR" == 1 ];then
	AURFETCHARGS="-n 1" # fetch the last comment
else
	AURFETCHARGS="-n $AURCOMMENTS" # fetch the last X comments
fi

# enforce a full refresh for repo and AUR - otherwise checkupdates will not show the real state..
$AURBIN $AURSYNCARG >> $LOG 2>&1

# source the ignores of pacman config
[ -f "$PACCONF" ]&& PACIGN=$(egrep "^IgnorePkg" $PACCONF | cut -d "=" -f 2)

# source the ignores of unattended config
[ -f "$UAIGNORE" ] && UAIGN=$(egrep "^IgnorePkg" $UAIGNORE | cut -d "=" -f 2)

#first adjust the filter
for filter in $PACIGN $UAIGN;do
	if [ -z "$FILTER" ];then
		FILTER="$filter"
	else
		FILTER="$FILTER|$filter"
	fi
done

# using checkupdates & checkupdates-aur) to find available packages then filter with archnews for relevant info 
# within the Arch news feed for each package.
echo -e "These binary packages can be upgraded on your machine ($(hostname)):" > $LOG
echo -e "---------------------------------------------------------------------------\n" >> $LOG
for cu in $(checkupdates 2>/dev/null|tr " " "|");do
	unset PKG
	PKG=$(echo "${cu}" | egrep -vi "($FILTER)")
	SPKG=${PKG/|*/}

	if [ $BRIEFNEWS == 1 ];then
		FPKG=$SPKG
	else
		FPKG=$(echo "$PKG" | sed 's/|/ /g')
	fi

	# make a list of all packages
	if [ ! -z "$PKG" ];then

		if [ -z "$PKGLIST" ];then
			PKGLIST="$FPKG"
			SPKGLIST="$SPKG"
		else
			if [ $BRIEFNEWS == 1 ];then
				PKGLIST="$PKGLIST,$FPKG"
			else
				PKGLIST="$PKGLIST\n$FPKG"
			fi
			SPKGLIST="$SPKGLIST $SPKG"
		fi
	fi
done
# now send the package summary to the log
echo -e "$PKGLIST" >> $LOG

echo -e "\n\nThese binary packages have been mentioned on the Arch news page!!" >> $LOG
echo -e "---------------------------------------------------------------------------" >> $LOG
echo -e "(please also take a look at the bottom so you don't miss any GLOBAL news!)\n" >> $LOG
# query arch news for each pkg
for pkgl in $SPKGLIST;do
	FPKG=$(echo "#---- $pkgl ----#" |tr "|" " ")
	$ANEWSBIN $ANEWSARGS --grep $pkgl 2> /dev/null | grep -i 'No news to display' >> /dev/null
	[ $? -ne 0 ] && echo -e "${FPKG}\n$($ANEWSBIN $ANEWSARGS --grep $pkgl 2> /dev/null)\n" >> $LOG
done

echo -e "\n\nThese AUR packages can be upgraded on your machine ($(hostname)):" >> $LOG
echo -e "---------------------------------------------------------------------------\n" >> $LOG
for cuaur in $(checkupdates-aur 2>/dev/null|tr " " "|");do
	unset FPKG PKG
	FPKG=$(echo "#---- $cuaur ----#" |tr "|" " ")
	PKG=$(echo "${cuaur/|*/}" | egrep -vi "($FILTER)")
	[ ! -z "$PKG" ] && echo -e "$FPKG\n$($AURFETCH $AURFETCHARGS $PKG | egrep -v '^\s*$' | sed 's/\[[0-9]*m//g' 2>/dev/null)" >> $LOG
	[ ! -z "$PKG" ] && echo -e "\n" >> $LOG
done

echo -e "\n\n\nLatest Arch News feed (complete - no filter):" >> $LOG
echo -e "---------------------------------------------------------------------------\n" >> $LOG
$ANEWSBIN $ANEWSARGS >> $LOG

# only send an email when wanted by the user and not called by unattended upgrade
if [ "$NEWSMAIL" == "yes" ]&&[ -z "$UA" ];then
	echo -e "$(date)\n$UPGRADECONF" | mail -a $LOG -r $FROM -s "Arch Update information for $(hostname)" $TO
fi
